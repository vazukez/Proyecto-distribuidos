version: '3.8'

services:
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - wazenet

  scraper:
    build:
      context: ./scraper
    container_name: scraper
    depends_on:
      - mongo
    networks:
      - wazenet
    command: python scraper.py

  cache:
    build:
      context: ./cache
    container_name: cache
    depends_on:
      - elasticsearch
    ports:
      - "5000:5000"
    networks:
      - wazenet
    command:
      [
        "python", "cache.py",
        "--size", "1000",
        "--elastic", "http://elasticsearch:9200",
        "--index", "eventos_waze",
        "--port", "5000"
      ]


  generator:
    build:
      context: ./genreador de trafico
    container_name: generator
    depends_on:
      - cache
      - elasticsearch
    networks:
      - wazenet
    command:
      [
        "python", "generator.py",
        "--lmbda", "1.0",
        "--n", "100",
        "--elastic", "http://elasticsearch:9200",
        "--index", "eventos_waze",
        "--cache_host", "cache",
        "--cache_port", "5000"
      ]


  pig:
    build:
      context: ./pig
    container_name: pig
    volumes:
      - ./data:/data
      - ./pig:/scripts
    working_dir: /data
    networks:
      - wazenet
    stdin_open: true
    tty: true
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - wazenet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.18
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - wazenet


volumes:
  mongo-data:

networks:
  wazenet:
